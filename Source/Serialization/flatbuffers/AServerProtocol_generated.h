// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_ASERVERPROTOCOL_PROTOCOL_H_
#define FLATBUFFERS_GENERATED_ASERVERPROTOCOL_PROTOCOL_H_

#include "flatbuffers/flatbuffers.h"

namespace Protocol {

struct RequestSomeThing;
struct RequestSomeThingBuilder;

struct ResponseSomThing;
struct ResponseSomThingBuilder;

struct RequestSomeThing FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef RequestSomeThingBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_REQUEST_STRING = 4
  };
  const flatbuffers::String *request_string() const {
    return GetPointer<const flatbuffers::String *>(VT_REQUEST_STRING);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyOffset(verifier, VT_REQUEST_STRING) &&
           verifier.VerifyString(request_string()) &&
           verifier.EndTable();
  }
};

struct RequestSomeThingBuilder {
  typedef RequestSomeThing Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_request_string(flatbuffers::Offset<flatbuffers::String> request_string) {
    fbb_.AddOffset(RequestSomeThing::VT_REQUEST_STRING, request_string);
  }
  explicit RequestSomeThingBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  flatbuffers::Offset<RequestSomeThing> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<RequestSomeThing>(end);
    return o;
  }
};

inline flatbuffers::Offset<RequestSomeThing> CreateRequestSomeThing(
    flatbuffers::FlatBufferBuilder &_fbb,
    flatbuffers::Offset<flatbuffers::String> request_string = 0) {
  RequestSomeThingBuilder builder_(_fbb);
  builder_.add_request_string(request_string);
  return builder_.Finish();
}

inline flatbuffers::Offset<RequestSomeThing> CreateRequestSomeThingDirect(
    flatbuffers::FlatBufferBuilder &_fbb,
    const char *request_string = nullptr) {
  auto request_string__ = request_string ? _fbb.CreateString(request_string) : 0;
  return Protocol::CreateRequestSomeThing(
      _fbb,
      request_string__);
}

struct ResponseSomThing FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef ResponseSomThingBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_RESPONSE_STRINGD = 4
  };
  const flatbuffers::String *response_stringd() const {
    return GetPointer<const flatbuffers::String *>(VT_RESPONSE_STRINGD);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyOffset(verifier, VT_RESPONSE_STRINGD) &&
           verifier.VerifyString(response_stringd()) &&
           verifier.EndTable();
  }
};

struct ResponseSomThingBuilder {
  typedef ResponseSomThing Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_response_stringd(flatbuffers::Offset<flatbuffers::String> response_stringd) {
    fbb_.AddOffset(ResponseSomThing::VT_RESPONSE_STRINGD, response_stringd);
  }
  explicit ResponseSomThingBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  flatbuffers::Offset<ResponseSomThing> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<ResponseSomThing>(end);
    return o;
  }
};

inline flatbuffers::Offset<ResponseSomThing> CreateResponseSomThing(
    flatbuffers::FlatBufferBuilder &_fbb,
    flatbuffers::Offset<flatbuffers::String> response_stringd = 0) {
  ResponseSomThingBuilder builder_(_fbb);
  builder_.add_response_stringd(response_stringd);
  return builder_.Finish();
}

inline flatbuffers::Offset<ResponseSomThing> CreateResponseSomThingDirect(
    flatbuffers::FlatBufferBuilder &_fbb,
    const char *response_stringd = nullptr) {
  auto response_stringd__ = response_stringd ? _fbb.CreateString(response_stringd) : 0;
  return Protocol::CreateResponseSomThing(
      _fbb,
      response_stringd__);
}

}  // namespace Protocol

#endif  // FLATBUFFERS_GENERATED_ASERVERPROTOCOL_PROTOCOL_H_
